\documentclass{beamer}
\usetheme[compress]{Singapore}
\useoutertheme{miniframes}

% \documentclass{beamer}
%\usetheme{Warsaw}

% Pour les documents en francais...
	\usepackage[latin1]{inputenc}
	\usepackage[french]{babel}
	\usepackage[french]{varioref}

% Mathématiques
	\usepackage{amsmath}

% Caracteres speciaux supplémentaires
	\usepackage{latexsym,amsfonts}

% A documenter
	\usepackage{moreverb}

% Macros pour les paquets
	\usepackage{array}  			% Nécessaires pour les tableaux de la macro Excel.

% Outil supplémentaire pour les tableaux
	\usepackage{multirow}
	\usepackage{booktabs}
	\usepackage{xcolor} % alternating row colors in table, incompatible avec certains modules
	\usepackage{longtable}
	\usepackage{colortbl}

% Pour insérer des graphiques
	\usepackage{graphicx} 			% Graphique simples
	\usepackage{subfigure}			% Graphiques multiples

% Pour insérer des couleurs
	\usepackage{color}

% Rotation des objets et des pages
%	\usepackage{rotating}
%	\usepackage{lscape}

% Pour insrer du code source, LaTeX ou SAS par exemple.
	\usepackage{verbatim}
        \usepackage{moreverb}
	\usepackage{listings}
	\usepackage{fancyvrb}

%	\lstset{language=SAS,numbers=left}		% Par dfaut le listing est en SAS

% Pour insérer des hyperliens
  \usepackage{hyperref}

% American Psychological Association (for bibliographic references).
	\usepackage{apacite}

% Pour l'utilisation des macros
	\usepackage{xspace}

% Pour l'utilisation de notes en fin de document.
%	\usepackage{endnotes}

% Array
%	\usepackage{multirow}
%	\usepackage{booktabs}

% Rotation
%	\usepackage{rotating}

% En têtes et pieds de pages
%	\usepackage{fancyhdr}
%	\usepackage{lastpage}


% Page layout

% By LaTeX commands
%\setlength{\oddsidemargin}{0cm}
%\setlength{\textwidth}{16cm}
%\setlength{\textheight}{24cm}
%\setlength{\topmargin}{-1cm}
%\setlength{\marginparsep}{0.2cm}

% fancyheader parameters
%\pagestyle{fancy}

%\fancyfoot[L]{{\small Formation \LaTeX, DEPP}}
%\fancyfoot[c]{}
%\fancyfoot[R]{{\small \thepage/\pageref{LastPage}}}

%\fancyhead[L]{}
%\fancyhead[c]{}
%\fancyhead[R]{}

% Pour insérer des dessins de Linux
\newcommand{\LinuxA}{\includegraphics[height=0.5cm]{Graphiques/linux.png}}
\newcommand{\LinuxB}{\includegraphics[height=0.5cm]{Graphiques/linux.png}\xspace}

% Macro pour les petits dessins pour les différents OS.
\newcommand{\Windows}{\emph{Windows}\xspace}
\newcommand{\Mac}{\emph{Mac OS X}\xspace}
\newcommand{\Linux}{\emph{Linux}\xspace}
\newcommand{\MikTeX}{MiK\tex\xspace}
\newcommand{\latex}{\LaTeX\xspace}


\newcommand{\df}{\emph{data.frame}\xspace}
\newcommand{\liste}{\emph{list}\xspace}
\newcommand{\cad}{c'est-à-dire\xspace}

% Titre
\title{Introduction à R}
\author{Pascal Bessonneau}
%\institute{DEPP}
\date{06/2015}
\subtitle{Graphiques}


\newcommand{\hreff}[2]{\underline{\href{#1}{#2}\xspace}}

<<defaults,results='hide',echo=FALSE>>=
require(MASS,quietly=T,warn.conflicts=FALSE)
require(xtable,quietly=T,warn.conflicts=FALSE)
require(stringr,quietly=T,warn.conflicts=FALSE)
require(RSQLite,quietly=T,warn.conflicts=FALSE)
require(foreign,quietly=T,warn.conflicts=FALSE)
suppressPackageStartupMessages(require(XLConnect,quietly=T,warn.conflicts=FALSE))

opts_chunk$set(fig.path='graphiques/beamer-',fig.align='center',fig.show='hold',size='footnotesize',
               fig.height=7,fig.width=7,out.width="\\textwidth",resize.height="0.6\\textheight",
               tidy=FALSE,prompt=TRUE
               )

options(width=45)

@

\begin{document}

\begin{frame}
	\maketitle
\end{frame}

\begin{frame}
	\tableofcontents
\end{frame}

% Begin document %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{Les différentres méthodes}

\begin{frame}[containsverbatim]
  \frametitle{Les méthodes}
  
  Tout d'abord R fournit des fonctions permettant de produire des graphiques 
  simples grâce à quelques fonctions de base.
  
  Ces graphiques dits "de base" sont assez simples à manipuler et à produire.
  
  Après des méthodes plus avancés mais demandant beaucoup plus de dextérité
  sont disponibles dans les packages grid notamment. On parle de graphique
  "grid" ou "treillis".
  
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Les méthodes}
  
  Les graphiques grid ne seront pas évoqués. Par contre il existe deux packages
  réalisant de beaux graphiques simplement utilise en fait non les graphiques
  de base mais le type "grid"~: \emph{lattice} et \emph{ggplot2}.
  
  \emph{lattice} est quelque peu passé de mode maintenant aussi il est préférable
  d'utiliser le paquet \emph{ggplot2}. Sa belle esthétique est caractéristique
  pour un connaisseur.
  
\end{frame}

\section{Les graphiques de base}
\begin{frame}[containsverbatim]
  \frametitle{Les fonctions de base}
  
  \begin{description}
    \item[hist] pour faire un histogramme
    \item[barplot] pour faire un diagramme en barre
    \item[boxplot] pour faire des boites à moustaches
    \item[plot] pour faire des "scatterplots"
    \item[sunflowerplot] pour faire des "scatterplots" quand les points se superposent
    \item[...]
  \end{description}

\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Les fonctions de base}
  
  La fonction \emph{plot} est polymorphe. C'est une fonction générique qui accepte
  de nombreux types d'objets en entrée et dont le résultat varie selon
  les arguments qui lui sont passés.
  
  C'est une fonction générique de R. 
  
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Les fonctions de base}
<<>>=
plot(rnorm(1000))
@

\end{frame}


\begin{frame}[containsverbatim]
  \frametitle{Les fonctions de base}
<<>>=
a=rnorm(1000)
plot(a,a+rnorm(1000,0,0.4))
@

\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Les fonctions de base}
<<>>=
plot(factor(sample(LETTERS[1:4],1000,replace=T)),
            rnorm(1000)
            )
@

\end{frame}


\begin{frame}[containsverbatim]
  \frametitle{Les fonctions de base}
  
  De nombreux packages utilisent la fonction \emph{plot} pour produire des 
  graphiques en passant un argument propre au paquet.
  
  C'est le cas par exemple pour une régression linéaire dans le paquet de base.
<<eval=FALSE>>=
a <- rnorm(1000)
dt <- data.frame(
  a=a,
  b=a+rnorm(1000,0,0.4)
)
rl <- lm(b ~ a)
plot(rl,ask=F)
@

\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Les fonctions de base}
  
<<echo=FALSE>>=
a <- rnorm(1000)
dt <- data.frame(
  a=a,
  b=a+rnorm(1000,0,0.4)
)
rl <- lm(b ~ a)
#plot(rl,ask=F)
@

<<>>=
class(rl)
@

La fonction \emph{plot} est une fonction générique. En fait la fonction spécialisé
pour les objets de type \emph{lm} est appelé en lieu et place de la fonction
usuelle.

\end{frame}


\begin{frame}[containsverbatim]
  \frametitle{Les fonctions de base}
  
<<>>=
methods(class=class(rl))
@

Cette commande est très pratique pour connaître les fonctions implémentées pour
ce type d'objet. 

\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Les fonctions de base}
  
  C'est en partie la raison pour laquelle on dit que R est un langage objet car
  c'est un langage dont certaines fonctions sont polymorphiques.
  
  En fait on parle dans ce cas de modèle S3. Le modèle S4 qui est plus proche 
  d'un vrai langage objet est peu utilisé pour l'instant.
  
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Les fonctions de base}
  
  Dans le cas des fonctions graphiques de base, les coordonnées sont calculés
  lors du première appel à la fonction.
  
  Ensuite on peut rajouter des points ou des surfaces et les coordonnées sont 
  exprimées dans les mêmes unités que celles des données.
  
  Ce n'est pas le cas pour le paquet grid ce qui rend les manipulations
  plus complexes.
  
\end{frame}


\begin{frame}[containsverbatim]
  \frametitle{Les arguments les plus fréquents}
  
  Les fonctions de base accepte des arguments par défaut très souvent les mêmes~:
  \begin{description}
    \item[xlim] un vecteur contenant le minimum et le maximum pour l'axe des 
    abscisses
  \item[ylim] un vecteur contenant le minimum et le maximum pour l'axe des 
    ordonnées
  \item[main] le titre du graphique
  \item[xlab] le nom de l'axe des abscisses
  \item[ylab] le nom de l'axe des ordonnées
  \item[col] la couleur des poiunts ou des surfaces
\end{description}

\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Les arguments les plus fréquents}
  
  Le nombre de paramètres graphiques est impressionnant et il varie malheureusement
  un peu selon les fonctions.
  
  on peut les visualiser avec la commande \emph{par()}.
  
\end{frame}
  

\begin{frame}[containsverbatim]
  \frametitle{Les arguments les plus fréquents}
  
  Par exemple on peut réduire les marges~:

<<>>=
par()$mar
par(mar=c(3.1,2.1,2.1,2.1))
plot(dt$b,dt$a)
@
  
\end{frame}
  
\begin{frame}[containsverbatim]
  \frametitle{Les arguments les plus fréquents}
  
  On peut également faire plusieurs graphiques sur la même page~:

<<eval=FALSE>>=
par(mfrow=c(2,2))
par(mar=c(3.1,2.1,2.1,2.1))
plot(dt$b,dt$a,col="blue",pch=20)
plot(dt$b,dt$a,col="green",pch=20)
plot(dt$b,dt$a,col="yellow",pch=20)
plot(dt$b,dt$a,col="red",pch=20)
@
  
\end{frame}


\begin{frame}[containsverbatim]
  \frametitle{Les arguments les plus fréquents}
  
  On peut également faire plusieurs graphiques sur la même page~:

<<eval=TRUE,echo=FALSE>>=
par(mfrow=c(2,2))
par(mar=c(3.1,2.1,2.1,2.1))
plot(dt$b,dt$a,col="blue",pch=20)
plot(dt$b,dt$a,col="green",pch=20)
plot(dt$b,dt$a,col="yellow",pch=20)
plot(dt$b,dt$a,col="red",pch=20)
@
  
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Les arguments les plus fréquents}
  
  
<<eval=TRUE,echo=FALSE>>=
par(mfrow=c(2,2))
par(mar=c(3.1,2.1,2.1,2.1))
plot(dt$b,dt$a,col="blue",pch=20)
plot(dt$b,dt$a,col="green",pch=20)
plot(dt$b,dt$a,col="yellow",pch=20)
plot(dt$b,dt$a,col="red",pch=20)
@
  
\end{frame}


\begin{frame}[containsverbatim]
  \frametitle{Les fonctions de superposition}

  Il faut distinguer deux types de fonctions~:
  \begin{itemize}
    \item les fonctions d'initialisation et de tracé
    \item les fonctions de superpositions sur un tracé
  \end{itemize}
  
  Un graphique R de base n'existe pas comme dit plus sans une échelle des X
  et une échelle des Y. Les fonctions comme \emph{plot}, \emph{barplot}, 
  \emph{hist}, \dots initialise le graphique et font tout ce qu'il faut 
  pour tracer un graphique.

\end{frame}


\begin{frame}[containsverbatim]
  \frametitle{Les fonctions de superposition}

  Les fonctions de superposition permettent de réaliser des tracés mais en utilisant
  sur des graphiques existants.
  
  Soit il s'agit de fonctions distinctes~:
  \begin{itemize}
    \item \emph{lines}
    \item \emph{points}
    \item \emph{text}
    \item \dots
  \end{itemize}
  
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Les fonctions de superposition}

  Les fonctions de superposition permettent de réaliser des tracés mais en utilisant
  sur des graphiques existants.
  
  Soit il s'agit de fonctions d'initialisation mais avec un argument spécifique~:
  généralement il s'agit de rajouter l'argument \emph{add}~:
<<,eval=FALSE>>=
plot(x,y,add=T)
@

\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{La notion de \emph{device}}
  
  La sortie par défaut sur R est une fenêtre graphique. Par exemple dans RStudio
  l'onglet plot en bas à droite.
  
  Mais on peut créer des graphiques dans des devices différents tels que des fichiers.
  Par exemple pour créer un fichier jpeg, il faut ouvrir un device \emph{jpeg} qui
  va se substituer à la fenêtre graphique. Puis on va fermer le device pour finaliser
  l'export.

\end{frame}

\section{Les devices}

\begin{frame}[containsverbatim]
  \frametitle{La notion de \emph{device}}

  
<<>>=
jpeg("graphiques/MonGraphique.jpeg")
par(mfrow=c(2,2))
par(mar=c(3.1,2.1,2.1,2.1))
plot(dt$b,dt$a,col="blue",pch=20)
plot(dt$b,dt$a,col="green",pch=20)
plot(dt$b,dt$a,col="yellow",pch=20)
plot(dt$b,dt$a,col="red",pch=20)
dev.off()
@

\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{La notion de \emph{device}}

  Les formats sont nombreux~:
  \begin{itemize}
    \item png
    \item pdf
    \item svg
    \item \dots
  \end{itemize}
  
  Chaque device porte le nom du type de fichier qu'il va créé.
  
\end{frame}

  
\begin{frame}[containsverbatim]
  \frametitle{La procédure avec les \emph{device}}

  La procédure se fait avec les étapes suivantes~:
  \begin{enumerate}
      \item vous créez le device avec par exemple \emph{png("file")}
      \item vous dessinez
      \item vous refermez le device avec la commande \emph{dev.off()}
  \end{enumerate}
  
  Quelque devices comme le pdf permet de produire plusieurs graphiques sur
  plusieurs pages comme par exemple le format PDF.
  
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Les arguments des \emph{device}}
  
  Les arguments varient, il suffit de regarder l'aide. Souvent on trouve
  l'argument dpi qui permet de donner la résolution du graphique.
  
  Les arguments width et height donnent la taille dont l'unité dépend du device
  choisi.

\end{frame}


\begin{frame}[containsverbatim]
  \frametitle{Les options d'agencement avancée}
  
  L'option \emph{layout} permet de définir des agencements avancés comme sur le 
  graphique ci-dessous.
  
  \includegraphics[scale=0.4]{graphiques/cartes_pleines}

\end{frame}


\begin{frame}[containsverbatim]
  \frametitle{Les options d'agencement avancée}
  
  Il suffit de donner en entrée une matrice avec un numéro dans l'ordre de ce qui 
  va être dessiner. Les fusions des cellules de la matrice donnent la taille
  de chaque zone.

  Dans l'exemple, on représente un grand graphique central pour la France
  métropolitaine puis des petits carrés pour les DOMs.

\end{frame}


\begin{frame}[containsverbatim]
  \frametitle{Les options d'agencement avancée}
  
  Il suffit de donner en entrée une matrice avec un numéro dans l'ordre de ce qui 
  va être dessiner. Les fusions des cellules de la matrice donnent la taille
  de chaque zone.

  Dans l'exemple, on représente un grand graphique central pour la France
  métropolitaine puis des petits carrés pour les DOMs.

\end{frame}


\begin{frame}[containsverbatim]
  \frametitle{Les options d'agencement avancée}

<<eval=FALSE>>=
xmetro <- 9
xdom <- 1
mm <- matrix(
    c(
      rep( 7,xdom), rep( 1,xmetro),
      rep( 7,xdom), rep( 1,xmetro),
      rep( 7,xdom), rep( 1,xmetro),
      rep( 2,xdom), rep( 1,xmetro),
      rep( 3,xdom), rep( 1,xmetro),
      rep( 4,xdom), rep( 1,xmetro),
      rep( 0,xdom), rep( 1,xmetro),
      rep( 0,xdom), rep( 1,xmetro),
      rep( 0,xdom), rep( 1,xmetro),
      rep( 0,xdom), rep(0,3), rep(5,1), rep(0,1), rep(6,1), rep(0,xmetro-6)
    ),
    ncol=10,
    nrow=10,
    byrow=T
)
mm
@
\end{frame}


\begin{frame}[containsverbatim]
  \frametitle{Les options d'agencement avancée}

<<echo=FALSE>>=
xmetro <- 9
xdom <- 1
mm <- matrix(
    c(
      rep( 7,xdom), rep( 1,xmetro),
      rep( 7,xdom), rep( 1,xmetro),
      rep( 7,xdom), rep( 1,xmetro),
      rep( 2,xdom), rep( 1,xmetro),
      rep( 3,xdom), rep( 1,xmetro),
      rep( 4,xdom), rep( 1,xmetro),
      rep( 0,xdom), rep( 1,xmetro),
      rep( 0,xdom), rep( 1,xmetro),
      rep( 0,xdom), rep( 1,xmetro),
      rep( 0,xdom), rep(0,3), rep(5,1), rep(0,1), rep(6,1), rep(0,xmetro-6)
    ),
    ncol=10,
    nrow=10,
    byrow=T
)
mm
@
\end{frame}



\end{document}
